[{"name":"class OlympicTeam(var team: List<Sportsman> = listOf())","description":".OlympicTeam","location":"-sorting-algorithms/[root]/-olympic-team/index.html","searchKeys":["OlympicTeam","class OlympicTeam(var team: List<Sportsman> = listOf())",".OlympicTeam"]},{"name":"class OlympicTeamGenerator","description":"generators.OlympicTeamGenerator","location":"-sorting-algorithms/generators/-olympic-team-generator/index.html","searchKeys":["OlympicTeamGenerator","class OlympicTeamGenerator","generators.OlympicTeamGenerator"]},{"name":"class OlympicTeamReader","description":".OlympicTeamReader","location":"-sorting-algorithms/[root]/-olympic-team-reader/index.html","searchKeys":["OlympicTeamReader","class OlympicTeamReader",".OlympicTeamReader"]},{"name":"class SportsmanGenerator","description":"generators.SportsmanGenerator","location":"-sorting-algorithms/generators/-sportsman-generator/index.html","searchKeys":["SportsmanGenerator","class SportsmanGenerator","generators.SportsmanGenerator"]},{"name":"data class NamesDatabase(val maleFirstNames: List<String>, val maleMiddleNames: List<String>, val maleLastNames: List<String>, val femaleMiddleNames: List<String>, val femaleFirstNames: List<String>, val femaleLastNames: List<String>)","description":"databasesMappers.NamesDatabase","location":"-sorting-algorithms/databasesMappers/-names-database/index.html","searchKeys":["NamesDatabase","data class NamesDatabase(val maleFirstNames: List<String>, val maleMiddleNames: List<String>, val maleLastNames: List<String>, val femaleMiddleNames: List<String>, val femaleFirstNames: List<String>, val femaleLastNames: List<String>)","databasesMappers.NamesDatabase"]},{"name":"data class SportsDatabase(val summerOlympics: List<String>)","description":"databasesMappers.SportsDatabase","location":"-sorting-algorithms/databasesMappers/-sports-database/index.html","searchKeys":["SportsDatabase","data class SportsDatabase(val summerOlympics: List<String>)","databasesMappers.SportsDatabase"]},{"name":"data class Sportsman(val fullName: String, val age: UInt, val height: UInt, val weight: UInt, val sportsType: String) : Comparable<Sportsman> ","description":".Sportsman","location":"-sorting-algorithms/[root]/-sportsman/index.html","searchKeys":["Sportsman","data class Sportsman(val fullName: String, val age: UInt, val height: UInt, val weight: UInt, val sportsType: String) : Comparable<Sportsman> ",".Sportsman"]},{"name":"fun NamesDatabase(maleFirstNames: List<String>, maleMiddleNames: List<String>, maleLastNames: List<String>, femaleMiddleNames: List<String>, femaleFirstNames: List<String>, femaleLastNames: List<String>)","description":"databasesMappers.NamesDatabase.NamesDatabase","location":"-sorting-algorithms/databasesMappers/-names-database/-names-database.html","searchKeys":["NamesDatabase","fun NamesDatabase(maleFirstNames: List<String>, maleMiddleNames: List<String>, maleLastNames: List<String>, femaleMiddleNames: List<String>, femaleFirstNames: List<String>, femaleLastNames: List<String>)","databasesMappers.NamesDatabase.NamesDatabase"]},{"name":"fun OlympicTeam(team: List<Sportsman> = listOf())","description":".OlympicTeam.OlympicTeam","location":"-sorting-algorithms/[root]/-olympic-team/-olympic-team.html","searchKeys":["OlympicTeam","fun OlympicTeam(team: List<Sportsman> = listOf())",".OlympicTeam.OlympicTeam"]},{"name":"fun OlympicTeamGenerator()","description":"generators.OlympicTeamGenerator.OlympicTeamGenerator","location":"-sorting-algorithms/generators/-olympic-team-generator/-olympic-team-generator.html","searchKeys":["OlympicTeamGenerator","fun OlympicTeamGenerator()","generators.OlympicTeamGenerator.OlympicTeamGenerator"]},{"name":"fun OlympicTeamReader()","description":".OlympicTeamReader.OlympicTeamReader","location":"-sorting-algorithms/[root]/-olympic-team-reader/-olympic-team-reader.html","searchKeys":["OlympicTeamReader","fun OlympicTeamReader()",".OlympicTeamReader.OlympicTeamReader"]},{"name":"fun SportsDatabase(summerOlympics: List<String>)","description":"databasesMappers.SportsDatabase.SportsDatabase","location":"-sorting-algorithms/databasesMappers/-sports-database/-sports-database.html","searchKeys":["SportsDatabase","fun SportsDatabase(summerOlympics: List<String>)","databasesMappers.SportsDatabase.SportsDatabase"]},{"name":"fun Sportsman(fullName: String, age: UInt, height: UInt, weight: UInt, sportsType: String)","description":".Sportsman.Sportsman","location":"-sorting-algorithms/[root]/-sportsman/-sportsman.html","searchKeys":["Sportsman","fun Sportsman(fullName: String, age: UInt, height: UInt, weight: UInt, sportsType: String)",".Sportsman.Sportsman"]},{"name":"fun SportsmanGenerator()","description":"generators.SportsmanGenerator.SportsmanGenerator","location":"-sorting-algorithms/generators/-sportsman-generator/-sportsman-generator.html","searchKeys":["SportsmanGenerator","fun SportsmanGenerator()","generators.SportsmanGenerator.SportsmanGenerator"]},{"name":"fun generateSportsman(): Sportsman","description":"generators.SportsmanGenerator.generateSportsman","location":"-sorting-algorithms/generators/-sportsman-generator/generate-sportsman.html","searchKeys":["generateSportsman","fun generateSportsman(): Sportsman","generators.SportsmanGenerator.generateSportsman"]},{"name":"fun generateTeam(size: Int): OlympicTeam","description":"generators.OlympicTeamGenerator.generateTeam","location":"-sorting-algorithms/generators/-olympic-team-generator/generate-team.html","searchKeys":["generateTeam","fun generateTeam(size: Int): OlympicTeam","generators.OlympicTeamGenerator.generateTeam"]},{"name":"fun generateTeamAndWriteToJSON(size: Int): OlympicTeam","description":"generators.OlympicTeamGenerator.generateTeamAndWriteToJSON","location":"-sorting-algorithms/generators/-olympic-team-generator/generate-team-and-write-to-j-s-o-n.html","searchKeys":["generateTeamAndWriteToJSON","fun generateTeamAndWriteToJSON(size: Int): OlympicTeam","generators.OlympicTeamGenerator.generateTeamAndWriteToJSON"]},{"name":"fun generateTeamsOfDifferentSizes(sizes: IntArray = arrayOf(100, 500, 1000, 5000, 10000, 50000, 100000))","description":"generators.OlympicTeamGenerator.generateTeamsOfDifferentSizes","location":"-sorting-algorithms/generators/-olympic-team-generator/generate-teams-of-different-sizes.html","searchKeys":["generateTeamsOfDifferentSizes","fun generateTeamsOfDifferentSizes(sizes: IntArray = arrayOf(100, 500, 1000, 5000, 10000, 50000, 100000))","generators.OlympicTeamGenerator.generateTeamsOfDifferentSizes"]},{"name":"fun main()","description":".main","location":"-sorting-algorithms/[root]/main.html","searchKeys":["main","fun main()",".main"]},{"name":"fun readTeamFromJSON(filename: String): OlympicTeam","description":".OlympicTeamReader.readTeamFromJSON","location":"-sorting-algorithms/[root]/-olympic-team-reader/read-team-from-j-s-o-n.html","searchKeys":["readTeamFromJSON","fun readTeamFromJSON(filename: String): OlympicTeam",".OlympicTeamReader.readTeamFromJSON"]},{"name":"fun sort(): OlympicTeam","description":".OlympicTeam.sort","location":"-sorting-algorithms/[root]/-olympic-team/sort.html","searchKeys":["sort","fun sort(): OlympicTeam",".OlympicTeam.sort"]},{"name":"fun sortPyramid(): OlympicTeam","description":".OlympicTeam.sortPyramid","location":"-sorting-algorithms/[root]/-olympic-team/sort-pyramid.html","searchKeys":["sortPyramid","fun sortPyramid(): OlympicTeam",".OlympicTeam.sortPyramid"]},{"name":"fun sortQuick(): OlympicTeam","description":".OlympicTeam.sortQuick","location":"-sorting-algorithms/[root]/-olympic-team/sort-quick.html","searchKeys":["sortQuick","fun sortQuick(): OlympicTeam",".OlympicTeam.sortQuick"]},{"name":"fun sortSimpleInserts(): OlympicTeam","description":".OlympicTeam.sortSimpleInserts","location":"-sorting-algorithms/[root]/-olympic-team/sort-simple-inserts.html","searchKeys":["sortSimpleInserts","fun sortSimpleInserts(): OlympicTeam",".OlympicTeam.sortSimpleInserts"]},{"name":"fun writeTeamToJSON(filename: String)","description":".OlympicTeam.writeTeamToJSON","location":"-sorting-algorithms/[root]/-olympic-team/write-team-to-j-s-o-n.html","searchKeys":["writeTeamToJSON","fun writeTeamToJSON(filename: String)",".OlympicTeam.writeTeamToJSON"]},{"name":"open operator override fun compareTo(other: Sportsman): Int","description":".Sportsman.compareTo","location":"-sorting-algorithms/[root]/-sportsman/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Sportsman): Int",".Sportsman.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":".OlympicTeam.equals","location":"-sorting-algorithms/[root]/-olympic-team/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean",".OlympicTeam.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":".Sportsman.equals","location":"-sorting-algorithms/[root]/-sportsman/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean",".Sportsman.equals"]},{"name":"open override fun hashCode(): Int","description":".OlympicTeam.hashCode","location":"-sorting-algorithms/[root]/-olympic-team/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int",".OlympicTeam.hashCode"]},{"name":"open override fun hashCode(): Int","description":".Sportsman.hashCode","location":"-sorting-algorithms/[root]/-sportsman/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int",".Sportsman.hashCode"]},{"name":"operator fun get(index: Int): Sportsman","description":".OlympicTeam.get","location":"-sorting-algorithms/[root]/-olympic-team/get.html","searchKeys":["get","operator fun get(index: Int): Sportsman",".OlympicTeam.get"]},{"name":"operator fun plus(otherTeam: OlympicTeam): OlympicTeam","description":".OlympicTeam.plus","location":"-sorting-algorithms/[root]/-olympic-team/plus.html","searchKeys":["plus","operator fun plus(otherTeam: OlympicTeam): OlympicTeam",".OlympicTeam.plus"]},{"name":"operator fun plus(sportsman: Sportsman): OlympicTeam","description":".OlympicTeam.plus","location":"-sorting-algorithms/[root]/-olympic-team/plus.html","searchKeys":["plus","operator fun plus(sportsman: Sportsman): OlympicTeam",".OlympicTeam.plus"]},{"name":"operator fun plusAssign(sportsman: Sportsman)","description":".OlympicTeam.plusAssign","location":"-sorting-algorithms/[root]/-olympic-team/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(sportsman: Sportsman)",".OlympicTeam.plusAssign"]},{"name":"val age: UInt","description":".Sportsman.age","location":"-sorting-algorithms/[root]/-sportsman/age.html","searchKeys":["age","val age: UInt",".Sportsman.age"]},{"name":"val femaleFirstNames: List<String>","description":"databasesMappers.NamesDatabase.femaleFirstNames","location":"-sorting-algorithms/databasesMappers/-names-database/female-first-names.html","searchKeys":["femaleFirstNames","val femaleFirstNames: List<String>","databasesMappers.NamesDatabase.femaleFirstNames"]},{"name":"val femaleLastNames: List<String>","description":"databasesMappers.NamesDatabase.femaleLastNames","location":"-sorting-algorithms/databasesMappers/-names-database/female-last-names.html","searchKeys":["femaleLastNames","val femaleLastNames: List<String>","databasesMappers.NamesDatabase.femaleLastNames"]},{"name":"val femaleMiddleNames: List<String>","description":"databasesMappers.NamesDatabase.femaleMiddleNames","location":"-sorting-algorithms/databasesMappers/-names-database/female-middle-names.html","searchKeys":["femaleMiddleNames","val femaleMiddleNames: List<String>","databasesMappers.NamesDatabase.femaleMiddleNames"]},{"name":"val fullName: String","description":".Sportsman.fullName","location":"-sorting-algorithms/[root]/-sportsman/full-name.html","searchKeys":["fullName","val fullName: String",".Sportsman.fullName"]},{"name":"val height: UInt","description":".Sportsman.height","location":"-sorting-algorithms/[root]/-sportsman/height.html","searchKeys":["height","val height: UInt",".Sportsman.height"]},{"name":"val maleFirstNames: List<String>","description":"databasesMappers.NamesDatabase.maleFirstNames","location":"-sorting-algorithms/databasesMappers/-names-database/male-first-names.html","searchKeys":["maleFirstNames","val maleFirstNames: List<String>","databasesMappers.NamesDatabase.maleFirstNames"]},{"name":"val maleLastNames: List<String>","description":"databasesMappers.NamesDatabase.maleLastNames","location":"-sorting-algorithms/databasesMappers/-names-database/male-last-names.html","searchKeys":["maleLastNames","val maleLastNames: List<String>","databasesMappers.NamesDatabase.maleLastNames"]},{"name":"val maleMiddleNames: List<String>","description":"databasesMappers.NamesDatabase.maleMiddleNames","location":"-sorting-algorithms/databasesMappers/-names-database/male-middle-names.html","searchKeys":["maleMiddleNames","val maleMiddleNames: List<String>","databasesMappers.NamesDatabase.maleMiddleNames"]},{"name":"val sizes: List<Int>","description":".sizes","location":"-sorting-algorithms/[root]/sizes.html","searchKeys":["sizes","val sizes: List<Int>",".sizes"]},{"name":"val sportsType: String","description":".Sportsman.sportsType","location":"-sorting-algorithms/[root]/-sportsman/sports-type.html","searchKeys":["sportsType","val sportsType: String",".Sportsman.sportsType"]},{"name":"val summerOlympics: List<String>","description":"databasesMappers.SportsDatabase.summerOlympics","location":"-sorting-algorithms/databasesMappers/-sports-database/summer-olympics.html","searchKeys":["summerOlympics","val summerOlympics: List<String>","databasesMappers.SportsDatabase.summerOlympics"]},{"name":"val weight: UInt","description":".Sportsman.weight","location":"-sorting-algorithms/[root]/-sportsman/weight.html","searchKeys":["weight","val weight: UInt",".Sportsman.weight"]},{"name":"var team: List<Sportsman>","description":".OlympicTeam.team","location":"-sorting-algorithms/[root]/-olympic-team/team.html","searchKeys":["team","var team: List<Sportsman>",".OlympicTeam.team"]}]
